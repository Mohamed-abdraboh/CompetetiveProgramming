#include<bits/stdc++.h>
using namespace std;

double distance(int x1, int y1, int x2, int y2) {
	return sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));
}

struct point {
	double x;
	double y;
	point() {
		x = 0;
		y = 0;
	}
	point(double _x, double _y) {
		x = _x;
		y = _y;
	}
};

bool cmp(point p1, point p2) {
	return p1.x == p2.x && p1.y == p2.y;
}

struct rectangle {
	double x1, y1, x2, y2;
};

vector<rectangle> recs;

bool shape(double x, double y, rectangle r) {

	if (x > r.x1 && x < r.x2 && y > r.y2 && y < r.y1)
		return true;

	return false;
}

int main() {

	point p1, p2, p3, p4;

	while (cin >> p1.x) {
		cin >> p1.y >> p2.x >> p2.y >> p3.x >> p3.y >> p4.x >> p4.y;

		if (cmp(p1, p3))
			cout << fixed << setprecision(3) << p4.x - p1.x + p2.x << " "
					<< p4.y - p1.y + p2.y << "\n";
		else if (cmp(p1, p4))
			cout << fixed << setprecision(3) << p3.x - p1.x + p2.x << " "
					<< p3.y - p1.y + p2.y << "\n";
		else if (cmp(p2, p3))
			cout << fixed << setprecision(3) << p4.x - p2.x + p1.x << " "
					<< p4.y - p2.y + p1.y << "\n";
		else if (cmp(p2, p4))
			cout << fixed << setprecision(3) << p3.x - p2.x + p1.x << " "
					<< p3.y - p2.y + p1.y << "\n";

	}
	return 0;
}
//	2 : 38 42 10
