#include<iostream>
#include<sstream>
#include<algorithm>
#include<stack>
#include<queue>
#include<vector>
#include<bitset>
#include<set>
#include<map>
#include<assert.h>
using namespace std;
#define cyan  ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define lp(i , n) for(int i=0; i<n; ++i)
const int MX = 3005;

map<string, int> mp;
int cnt = 1;

void enumerateStrings(string s, unsigned int len) {

	if (s.size() == len) {
		mp[s] = cnt++;
		return;
	}

	char lastLetter;

	if (s.empty())
		lastLetter = 'a';
	else
		lastLetter = s[s.size() - 1] + 1;

	for (char c = lastLetter; c <= 'z'; ++c)
		enumerateStrings(s + c, len);

}

bool cmp(pair<int,int> &a, pair<int ,int> &b) {
	return a.first < b.first;
}

int main() {

	string str;
	vector<pair<int, int>> v;

	while (cin >> str && str != "#") {
		pair<int, int> p;
		cin >> p.first >> p.second;
		v.push_back(p);
	}

	int k;
	cin >> k;

	sort(v.begin(),v.end(),cmp);
	lp(i , 3005)
	{
		for (auto p : v)
			if (i % p.second == 0) {
				if (p.first != 0 && i == 0)
					continue;
				k--;
				cout << p.first << "\n";
				if (!k)
					return 0;
			}
	}

	return 0;
}

